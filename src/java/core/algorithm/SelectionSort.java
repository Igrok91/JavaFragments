package java.core.algorithm;

/**
 * Created by innopolis on 30.01.2017.
 * При данной сортировке из массива выбирается элемент с наименьшим значением и обменивается с первым элементом.
 * Затем из оставшихся n - 1 элементов снова выбирается элемент с наименьшим ключом и обменивается со вторым элементом, и т.д.
 *

 Шаги алгоритма:

 находим минимальное значение в текущей части массива;
 производим обмен этого значения со значением на первой неотсортированной позиции;
 далее сортируем хвост массива, исключив из рассмотрения уже отсортированные элементы.
 */
public class SelectionSort {
    public static void main(String[] args) {
        int arr[] = {12, 14, 3, 6, 2, 7, 8, 4,9,0} ;
        selectionSort(arr);
        for (int b: arr) {
            System.out.print(b);
        }

    }

    private static void selectionSort(int[] arr) {
        for(int i = 0; i < arr.length; i++){
            /*Предполагаем, что первый элемент (в каждом
           подмножестве элементов) является минимальным */
          int min = arr[i];
          int min_i = i;
           /*В оставшейся части подмножества ищем элемент,
           который меньше предположенного минимума*/
           for(int j = i + 1; j < arr.length; j++) {
               if(arr[j] < min){
                    min = arr[j];
                    min_i = j;
               }
           }
            /*Если нашелся элемент, меньший, чем на текущей позиции,
          меняем их местами*/
           if(i != min_i){
                int tmp = arr[i];
                arr[i] = arr[min_i];
                arr[min_i] = tmp;

           }
        }
    }
}
